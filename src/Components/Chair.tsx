/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/chair2/scene.gltf -t -r public 
Author: Red Fox / nokillnando (https://sketchfab.com/nokillnando)
License: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)
Source: https://sketchfab.com/3d-models/office-chair-b228a29fa84544c2be501c295653ffe7
Title: Office Chair
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    OfficeChair_OfficeChairMetal_0: THREE.Mesh
    OfficeChair_OfficeChairPlastic_0: THREE.Mesh
    OfficeChair_OfficeChairCloth_0: THREE.Mesh
    OfficeChair_OfficeChairLeather_0: THREE.Mesh
  }
  materials: {
    OfficeChairMetal: THREE.MeshStandardMaterial
    OfficeChairPlastic: THREE.MeshStandardMaterial
    OfficeChairCloth: THREE.MeshStandardMaterial
    OfficeChairLeather: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function Chair(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/chair2/scene.gltf') as GLTFResult
  return (
    <group {...props} dispose={null} scale={10}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.OfficeChair_OfficeChairMetal_0.geometry} material={materials.OfficeChairMetal} />
        <mesh geometry={nodes.OfficeChair_OfficeChairPlastic_0.geometry} material={materials.OfficeChairPlastic} />
        <mesh geometry={nodes.OfficeChair_OfficeChairCloth_0.geometry} material={materials.OfficeChairCloth} />
        <mesh geometry={nodes.OfficeChair_OfficeChairLeather_0.geometry} material={materials.OfficeChairLeather} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/chair2/scene.gltf')
