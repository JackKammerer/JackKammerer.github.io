/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/controller/scene.gltf -t -r public 
Author: cosmicollie (https://sketchfab.com/cosmicollie)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/controller-5ba4ef24d6554dc9b34417f41b7b0191
Title: Controller
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh
    Object_3: THREE.Mesh
    Object_4: THREE.Mesh
    Object_5: THREE.Mesh
    Object_6: THREE.Mesh
    Object_7: THREE.Mesh
    Object_8: THREE.Mesh
    Object_9: THREE.Mesh
    Object_10: THREE.Mesh
  }
  materials: {
    Default_OBJ: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function Controller(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/controller/scene.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.72}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.Default_OBJ} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.Default_OBJ} />
        <mesh geometry={nodes.Object_4.geometry} material={materials.Default_OBJ} />
        <mesh geometry={nodes.Object_5.geometry} material={materials.Default_OBJ} />
        <mesh geometry={nodes.Object_6.geometry} material={materials.Default_OBJ} />
        <mesh geometry={nodes.Object_7.geometry} material={materials.Default_OBJ} />
        <mesh geometry={nodes.Object_8.geometry} material={materials.Default_OBJ} />
        <mesh geometry={nodes.Object_9.geometry} material={materials.Default_OBJ} />
        <mesh geometry={nodes.Object_10.geometry} material={materials.Default_OBJ} />
      </group>
    </group>
  )
}

useGLTF.preload('/controller/scene.gltf')
