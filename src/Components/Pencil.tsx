/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/pencil/scene.gltf -t -r public 
Author: shedmon (https://sketchfab.com/shedmon)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/pencil-9e0dba29de734ac4b20060ec873dc36c
Title: Pencil
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    defaultMaterial: THREE.Mesh
  }
  materials: {
    Default: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function Pencil(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/pencil/scene.gltf') as GLTFResult
  return (
    <group {...props} dispose={null} scale={5}>
      <group rotation={[Math.PI / 2, -0.858, -Math.PI]} scale={0.44}>
        <mesh geometry={nodes.defaultMaterial.geometry} material={materials.Default} rotation={[Math.PI / 2, 0, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('/pencil/scene.gltf')
